{"version":3,"sources":["connectors/injected-connector.js","assets/logo.png","assets/icons.gif","connectors/address.ts","components/Buy.tsx","assets/metamask.svg","assets/wallet.svg","connectors/wallet-connect.ts","components/Connect.tsx","components/Salecard.tsx","pages/Home.tsx","App.tsx","connectors/use-eager-connector.ts","index.tsx"],"names":["injectedConnector","InjectedConnector","supportedChainIds","NFTContract","rpc","Buy","price","classes","UseStyle","useState","value","setValue","rewardValue","setRewardValue","nfts","setNfts","useWeb3React","account","library","useEffect","getRewards","a","provider","JsonRpcProvider","contract","Contract","abi","reward","walletOfOwner","nft","length","items","map","item","Number","formatUnits","console","log","handleClaimRewards","getSigner","signer","claimRewards","txResult","wait","toast","success","code","type","error","message","handleMint","overrides","parseUnits","toString","mint","className","title1","title","style","display","justifyContent","alignItems","paddingTop","onClick","IconButton","fontSize","width","textAlign","paddingBottom","Button","color","sx","height","backgroundColor","borderRadius","marginLeft","variant","disabled","makeStyles","theme","createStyles","fontWeight","walletconnect","WalletConnectConnector","chainId","bridge","qrcode","Connect","isOpen","setIsOpen","switchNet","setSwitchNet","activate","handleMetamaskClick","result","handleWalletConnectClick","networks","bsc","chainName","nativeCurrency","name","symbol","decimals","rpcUrls","blockExplorerUrls","switchNetwork","window","ethereum","request","method","params","Dialog","open","DialogTitle","Divider","DialogContent","dlg","Box","flexDirection","startIcon","src","mm","alt","btn","fullWidth","wc","DialogActions","padding","Salecard","mints","setMints","setPrice","getMints","on","totalSupply","mint2","mint1","PRICE","cost","main","address","contractButton","endIcon","backdropFilter","minHeight","boxShadow","textTransform","Home","Grid","container","spacing","xs","center","logo","md","icons","iconsInvert","footer","backgroundSize","background","marginTop","marginBottom","border","maxWidth","transform","marginRight","getLibrary","Web3Provider","pollingInterval","App","active","tried","setTried","isAuthorized","then","catch","useEagerConnect","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.589baf2d.chunk.js","sourcesContent":["import { InjectedConnector } from \"@web3-react/injected-connector\";\n\nexport const injectedConnector = new InjectedConnector({\n  supportedChainIds: [\n   56,\n  ], \n});\n\nexport function activateInjectedProvider(providerName) {\n  const { ethereum } = window;\n\n  if (!ethereum?.providers) {\n      return undefined;\n  }\n\n  let provider;\n  switch (providerName) {\n      case 'CoinBase':\n          provider = ethereum.providers.find(({ isCoinbaseWallet}) => isCoinbaseWallet);\n          break;\n      case 'MetaMask':\n          provider = ethereum.providers.find(({ isMetaMask }) => isMetaMask);\n          break;\n      default:\n        break;\n  }\n\n  if (provider) {\n      ethereum.setSelectedProvider(provider);\n  }\n}","export default __webpack_public_path__ + \"static/media/logo.0eca7550.png\";","export default __webpack_public_path__ + \"static/media/icons.43d35edc.gif\";","export const NFTContract = \"0x44C6D2Bd2cB19d8c24D27A344201FFcE65c4919C\";\nexport const rpc = \"https://bsc-dataseed1.binance.org\";\nexport const chainId = \"0x38\";\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport { Button, Chip, IconButton, Theme } from \"@mui/material\";\nimport { createStyles, makeStyles } from \"@mui/styles\";\nimport RemoveCircleOutlinedIcon from \"@mui/icons-material/RemoveCircleOutlined\";\nimport AddCircleOutlinedIcon from \"@mui/icons-material/AddCircleOutlined\";\nimport { Fragment, useEffect, useState } from \"react\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { Contract } from \"@ethersproject/contracts\";\nimport { NFTContract } from \"../connectors/address\";\nimport abi from \"../abi/abi.json\";\nimport { formatUnits, parseUnits } from \"@ethersproject/units\";\nimport { toast } from \"react-toastify\";\nimport { rpc } from \"../connectors/address\";\nimport { JsonRpcProvider, Web3Provider } from \"@ethersproject/providers\";\ninterface Props {\n  price: number;\n}\nexport const Buy = ({ price }: Props) => {\n  const classes = UseStyle();\n  const [value, setValue] = useState(1);\n  const [rewardValue, setRewardValue] = useState(0);\n  const [nfts, setNfts] = useState<number[]>();\n  const { account, library } = useWeb3React<Web3Provider>();\n\n  const getSalePriceValue = () => {\n    const mintPrice = parseUnits(Number(price * value).toString(), 18);\n    return mintPrice.toString();\n  };\n  useEffect(() => {\n    const getRewards = async () => {\n      try {\n        const provider = new JsonRpcProvider(rpc);\n        const contract = new Contract(NFTContract, abi, provider);\n        const reward = await contract.getRewards(account);\n        const nft: any[] = await contract.walletOfOwner(account);\n        if (nft.length > 0) {\n          const items = nft.map((item) => {\n            return Number(formatUnits(item, 0));\n          });\n          console.log(items);\n          setNfts(items);\n        }\n        setRewardValue(Number(formatUnits(reward, \"ether\")));\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    if (account && library) {\n      getRewards();\n    }\n  }, [account, library]);\n\n  const handleClaimRewards = async () => {\n    if (account && library) {\n      try {\n        const signer = await library.getSigner();\n        const contract = new Contract(NFTContract, abi, signer);\n        const txResult = await contract.claimRewards(nfts);\n        await txResult.wait();\n        toast.success(`${rewardValue} claimed successfully!`);\n      } catch (err: any) {\n        console.log(err);\n        if (err) {\n          if (err.code === -32000) {\n            toast(\"Insufficient Funds\", { type: \"error\" });\n          } else {\n            toast.error(err.message);\n            console.log(err.code);\n          }\n        } else {\n          if (err.code === 4001) {\n            toast.error(\"User denied transaction signature.\");\n          } else toast.error(\"Transaction Error\");\n        }\n      }\n    }\n  };\n  const handleMint = async () => {\n    if (account && library) {\n      try {\n        const signer = await library.getSigner();\n        let overrides = {\n          value: getSalePriceValue(),\n        };\n        const contract = new Contract(NFTContract, abi, signer);\n        const txResult = await contract.mint(value, overrides);\n        await txResult.wait();\n        toast.success(`${value} Ascended Masters NFT minted successfully!`);\n      } catch (err: any) {\n        console.log(err);\n        if (err) {\n          if (err.code === -32000) {\n            toast(\"Insufficient Funds\", { type: \"error\" });\n          } else {\n            toast.error(err.message);\n            console.log(err.code);\n          }\n        } else {\n          if (err.code === 4001) {\n            toast.error(\"User denied transaction signature.\");\n          } else toast.error(\"Transaction Error\");\n        }\n      }\n    }\n  };\n\n  const increment = () => {\n    if (value < 5) {\n      setValue((value) => value + 1);\n    }\n  };\n\n  const decrement = () => {\n    if (value > 1) {\n      setValue((value) => value - 1);\n    }\n  };\n  return (\n    <>\n      <div className={classes.title1}>\n        <span>\n          <b>Your Address : </b>\n          {account}{\" \"}\n        </span>\n      </div>\n      <div className={classes.title}>Click buy to mint your NFT.</div>\n\n      <Fragment>\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            paddingTop: \" 12px\",\n          }}\n        >\n          <div onClick={decrement}>\n            <IconButton>\n              <RemoveCircleOutlinedIcon />\n            </IconButton>\n          </div>\n          <div style={{ fontSize: \"22px\", width: \"60px\", textAlign: \"center\" }}>\n            {value}\n          </div>\n          <div onClick={increment}>\n            <IconButton>\n              <AddCircleOutlinedIcon />\n            </IconButton>\n          </div>\n        </div>\n        <div\n          style={{\n            textAlign: \"center\",\n            paddingTop: \"8px\",\n            paddingBottom: \"8px\",\n          }}\n        >\n          Your Rewards : {rewardValue} BNB\n        </div>\n        <div\n          style={{\n            textAlign: \"center\",\n            paddingTop: \"8px\",\n            paddingBottom: \"16px\",\n          }}\n        >\n          <Button\n            onClick={() => handleMint()}\n            color=\"primary\"\n            sx={{\n              fontSize: \"12px\",\n              height: \"36px\",\n              backgroundColor: \"#000\",\n              borderRadius: \"18px\",\n              width: \"150px\",\n              marginLeft: \"8px\",\n            }}\n            variant=\"contained\"\n          >\n            {\" \"}\n            Mint NFT\n          </Button>\n\n          <Button\n            onClick={handleClaimRewards}\n            color=\"primary\"\n            sx={{\n              fontSize: \"12px\",\n              height: \"36px\",\n              width: \"150px\",\n              backgroundColor: \"#000\",\n              borderRadius: \"18px\",\n              marginLeft: \"8px\",\n            }}\n            variant=\"contained\"\n            disabled={rewardValue > 0 && nfts!.length > 0 ? false : true}\n          >\n            {\" \"}\n            Claim Rewards\n          </Button>\n        </div>\n      </Fragment>\n    </>\n  );\n};\n\nconst UseStyle = makeStyles((theme: Theme) =>\n  createStyles({\n    title: {\n      paddingTop: \"24px\",\n      fontWeight: \"400\",\n      fontSize: \"16px\",\n      textAlign: \"center\",\n    },\n    title1: {\n      paddingTop: \"24px\",\n      fontWeight: \"400\",\n      fontSize: \"16px\",\n      textAlign: \"center\",\n    },\n  })\n);\n","export default __webpack_public_path__ + \"static/media/metamask.e7705173.svg\";","export default __webpack_public_path__ + \"static/media/wallet.5d2458c6.svg\";","\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\nconst RPC_URLS: { [chainId: number]: string } = {\n    56: \"https://bsc-dataseed1.binance.org\",\n  }\nexport const walletconnect = new WalletConnectConnector({\n    rpc: RPC_URLS,\n    chainId: 56,\n    bridge: 'https://bridge.walletconnect.org',\n    qrcode: true\n  })","import {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Divider,\n  Theme,\n  Box,\n} from \"@mui/material\";\nimport { createStyles, makeStyles } from \"@mui/styles\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport React, { useEffect, useState } from \"react\";\nimport {  injectedConnector } from \"../connectors/injected-connector\";\nimport mm from \"../assets/metamask.svg\";\nimport wc from \"../assets/wallet.svg\"\nimport { walletconnect } from \"../connectors/wallet-connect\";\nimport {toast} from \"react-toastify\";\nimport { chainId } from \"../connectors/address\";\ndeclare global{\n  interface Window{\n    ethereum: any;\n  }\n}\nexport const Connect = () => {\n  const classes = UseStyle();\n  const [isOpen, setIsOpen] = useState(false);\n  const [switchNet, setSwitchNet] = useState(false);\n  const { activate, chainId, error, account, library} = useWeb3React();\n  const handleMetamaskClick = async () => {\n      const result = await activate(injectedConnector);\n      console.log(\"dhjhff\",result);\n      setIsOpen(false);\n  }\n\n  const handleWalletConnectClick = async () => {\n    await activate(walletconnect);\n    setIsOpen(false);\n}\nuseEffect(()=> {\n  console.log(account)\n  if(account && account !==\"\" && account.length > 0){\n    toast(`Wallet connected! \\n ${account}`,{type:\"success\"});\n  }\n}, [account]);\n\nconst networks = {\n  bsc: {\n    chainId: `0x${Number(56).toString(16)}`,\n    chainName: \"Binance smart chain\",\n    nativeCurrency: {\n      name: \"BSC\",\n      symbol: \"BNB\",\n      decimals: 18\n    },\n    rpcUrls: [\n      \"https://bsc-dataseed1.binance.org\",\n      \"https://bsc-dataseed2.binance.org\",\n      \"https://bsc-dataseed3.binance.org\",\n      \"https://bsc-dataseed4.binance.org\",\n      \"https://bsc-dataseed1.defibit.io\",\n      \"https://bsc-dataseed2.defibit.io\",\n      \"https://bsc-dataseed3.defibit.io\",\n      \"https://bsc-dataseed4.defibit.io\",\n      \"https://bsc-dataseed1.ninicoin.io\",\n      \"https://bsc-dataseed2.ninicoin.io\",\n      \"https://bsc-dataseed3.ninicoin.io\",\n      \"https://bsc-dataseed4.ninicoin.io\",\n      \"wss://bsc-ws-node.nariox.org\"\n    ],\n    blockExplorerUrls: [\"https://bscscan.com\"]\n  }\n};\nconst switchNetwork = async () => {\n  await window.ethereum.request({\n    method: 'wallet_addEthereumChain',\n    params: [{\n      ...networks['bsc']\n    }],\n  });\n  toast(`Network Switched to BSC Mainnet`,{type:\"success\"});\n}\n\nuseEffect(() => {\n  if (error) {\n    console.log(error)\n    switch (error.name) {\n      case \"UnsupportedChainIdError\":\n        console.log(chainId);\n        toast(\"Unsupported network, Switch to ethereum\", {type: \"error\"})\n        setSwitchNet(true);\n        break;\n      case \"NoEthereumProviderError\":\n        toast(\"Please Install metamask.\", {type:\"error\"})\n        break;\n      case \"UserRejectedRequestError\":\n          toast(\"Connection request rejected.\", { type: \"warning\"})\n        break;\n      default:\n        \n        break;\n    }\n  }\n}, [error]);\n  \n  return (\n    <>\n      <div className={classes.title}>Connect to the Binance Smart Chain Network.</div>\n      <div style={{ textAlign: \"center\", paddingTop: \"24px\" }}>\n        {\n          !switchNet ? (<Button\n            sx={{\n              borderRadius: 15,\n              backgroundColor: \"#000\",\n            }}\n            onClick={() => setIsOpen(true)}\n            color=\"primary\"\n            variant=\"contained\"\n          >\n            Connect{\" \"}\n          </Button>) : (<Button\n          sx={{\n            borderRadius: 15,\n            backgroundColor: \"#000\",\n          }}\n          onClick={switchNetwork}\n          color=\"primary\"\n          variant=\"contained\"\n        >\n          Switch Network{\" \"}\n        </Button>)\n        }\n      </div>\n      <Dialog open={isOpen}>\n        <DialogTitle>Select Wallet</DialogTitle>\n        <Divider />\n        <DialogContent className={classes.dlg}>\n          <Box\n            display=\"flex\"\n            flexDirection=\"column\"\n            justifyContent=\"center\"\n            alignItems=\"center\"\n          >\n            <Button\n              startIcon={<img src={mm} alt=\"Metamask\" width={40} />}\n              className={classes.btn}\n              fullWidth\n              variant=\"text\"\n              onClick={handleMetamaskClick}\n            >\n              Metamask\n            </Button>\n            <Button\n              startIcon={<img src={wc} alt=\"Metamask\" width={40} />}\n              className={classes.btn}\n              fullWidth\n              variant=\"text\"\n              onClick={handleWalletConnectClick}\n            >\n              Wallet Connect\n            </Button>\n          </Box>\n        </DialogContent>\n        <Divider />\n        <DialogActions>\n          <div>\n            <Button onClick={() => setIsOpen(false)}>Close</Button>\n          </div>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n\nconst UseStyle = makeStyles((theme: Theme) =>\n  createStyles({\n    title: {\n      paddingTop: \"24px\",\n      fontWeight: \"400\",\n      fontSize: \"16px\",\n      textAlign: \"center\",\n      color: \"#ffffff !important\",\n    },\n    dlg: {\n      width: 450,\n      padding: 15,\n    },\n    btn: {\n      color: \"black !important\" as any,\n      fontSize: \"22px !important\" as any,\n    },\n  })\n);\n\n\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport { Button, Theme } from \"@mui/material\";\nimport { createStyles, makeStyles } from \"@mui/styles\";\nimport { useEffect, useState } from \"react\";\nimport { Buy } from \"./Buy\";\nimport { Connect } from \"./Connect\";\nimport OpenInNewIcon from \"@mui/icons-material/OpenInNew\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport {NFTContract, rpc} from \"../connectors/address\";\nimport { JsonRpcProvider, Web3Provider } from \"@ethersproject/providers\";\nimport { Contract } from \"@ethersproject/contracts\";\nimport abi from \"../abi/abi.json\";\nimport { formatUnits } from \"@ethersproject/units\";\nexport const Salecard = () => {\n  const [mints, setMints] = useState(0);\n  const [price, setPrice] = useState(0);\n  const { account, library  } = useWeb3React<Web3Provider>();\n\n    useEffect(() => {\n        const getMints = async () => {\n          const provider = new JsonRpcProvider(rpc);\n            const contract = new Contract(NFTContract, abi, provider );\n            console.log(contract)\n            contract.on(\"CreateAscendedMastersNFT\", async () => {\n                const mint2 = await contract.totalSupply();\n                setMints(Number(formatUnits(mint2, 0)));\n            });\n            const mint1 = await contract.totalSupply();\n            setMints(Number(formatUnits(mint1, 0)));\n            const cost = await contract.PRICE();\n            setPrice(Number(formatUnits(cost, \"ether\")));\n        }\n            getMints();\n    }, [])\n  const classes = UseStyle();\n  return (\n    <div className={classes.main}>\n      <div className={classes.title}>{mints} / 444</div>\n      <div className={classes.address}>\n        <Button\n          className={classes.contractButton}\n          variant=\"text\"\n          endIcon={<OpenInNewIcon />}\n          onClick={() => window.open(`https://bscscan.com/token/${NFTContract}`, \"_blank\")}\n        >\n          NFT Contract\n        </Button>\n      </div>\n      <div className={classes.cost}>1 Ascended Masters NFT costs {price} BNB.</div>\n\n     {!account &&  <Connect />}\n      {account && <Buy price={price} />}\n    </div>\n  );\n};\n\nconst UseStyle = makeStyles((theme: Theme) =>\n  createStyles({\n    main: {\n      backgroundColor: \"rgba(170, 170, 170, 0.4) !important\",\n      backdropFilter: \"blur(5px) !important\",\n      borderRadius: \"16px\",\n      minHeight: \"360px\",\n      boxShadow: \"rgba(38, 122, 69, 0.55) 0px 0px 35px;\",\n    },\n    title: {\n      paddingTop: \"32px\",\n      fontWeight: \"600\",\n      fontSize: \"48px\",\n      textAlign: \"center\",\n      color:\"white\"\n    },\n    address: {\n      paddingTop: \"24px\",\n      fontWeight: \"400\",\n      fontSize: \"16px\",\n      textAlign: \"center\",\n      textTransform: \"capitalize\",\n    },\n    cost: {\n      paddingTop: \"24px\",\n      fontWeight: \"600\",\n      fontSize: \"18px\",\n      textAlign: \"center\",\n      color: \"#ffffff !important\",\n    },\n    contractButton: {\n      textTransform: \"capitalize !important\" as any,\n      color: \"#ffffff !important\",\n    },\n  })\n);\n","import { Grid, Theme } from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\n\nimport logo from \"../assets/logo.png\";\nimport icons from \"../assets/icons.gif\";\nimport { Salecard } from \"../components/Salecard\";\nexport const Home = () => {\n  const classes = UseStyle();\n  return (\n    <div className={classes.main}>\n      <div\n        style={{ width: \"100%\", height: \"100%\", backdropFilter: \"blur(16px)\" }}\n      >\n        <Grid  container spacing={2}>\n          <Grid item className=\"top\" xs={12}>\n            <div className={classes.center}>\n              <img src={logo} alt=\"logo\" className={classes.logo} />\n            </div>\n          </Grid>\n          <Grid item xs={12} md={3}>\n            <div className={classes.center}>\n              <img src={icons} alt=\"logo\" className={classes.icons} />\n            </div>\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <Salecard />\n          </Grid>\n          <Grid item xs={12} md={3}>\n            <div className={classes.center}>\n              <img src={icons} alt=\"logo\" className={classes.iconsInvert} />\n            </div>\n          </Grid>\n          <Grid item xs={12}>\n            <div className={classes.center}>\n              <div style={{ color: \"white\" }} className={classes.footer}>\n                Please make sure you are connected to the right network\n                (Binance Smart Chain) and the correct address. Please note: Once\n                you make the purchase, you cannot undone the action.\n              </div>\n            </div>\n          </Grid>\n        </Grid>\n      </div>\n    </div>\n  );\n};\n\nconst UseStyle = makeStyles((theme: Theme) => ({\n  main: {\n    width: \"100%\",\n    minHeight: \"100vh\",\n    backgroundSize: \"cover\",\n    background:\n      \"radial-gradient(circle, rgba(131,58,180,1) 0%, rgba(253,29,29,1) 50%, rgba(252,176,69,1) 100%)\",\n    marginTop: 16,\n  },\n  center: {\n    width: \"100%\",\n    textAlign: \"center\",\n  },\n  logo: {\n    width: \"270px\",\n    height: \"270px\",\n    borderRadius: \"50%\",\n    marginTop: \"48px\",\n    marginBottom: \"40px\",\n    boxShadow: \"rgba(0, 0, 0, 0.75) 0px 5px 15px;\",\n    border: \"1px solid #ffffff60\",\n  },\n  icons: {\n    maxWidth: \"260px\",\n    height: \"auto\",\n    borderRadius: \"50%\",\n    marginTop: \"40px\",\n    border: \"1px solid #ffffff20\",\n    backgroundColor: \"white\",\n    boxShadow: \"rgba(0, 0, 0, 0.75) 0px 5px 15px;\",\n  },\n  iconsInvert: {\n    maxWidth: \"260px\",\n    height: \"auto\",\n    borderRadius: \"50%\",\n    marginTop: \"40px\",\n    border: \"1px solid #ffffff20\",\n    transform: \"scaleX(-1)\",\n    backgroundColor: \"white\",\n    boxShadow: \"rgba(0, 0, 0, 0.75) 0px 5px 15px;\",\n  },\n  footer: {\n    maxWidth: \"840px\",\n    color: \"#ffffff\",\n    fontSize: \"14px\",\n    fontWeight: \"600\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    marginBottom: \"16px\",\n  },\n}));\n","import { Web3Provider } from \"@ethersproject/providers\";\nimport { useEagerConnect } from \"./connectors/use-eager-connector\";\nimport { Home } from \"./pages/Home\";\nimport { Web3ReactProvider } from \"@web3-react/core\";\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nfunction getLibrary(provider: any) {\n  const library = new Web3Provider(provider);\n  library.pollingInterval = 12000;\n  return library;\n}\nfunction App() {\n  useEagerConnect();\n  return (\n    <Web3ReactProvider getLibrary={getLibrary}>\n      <ToastContainer />\n      <Home />\n    </Web3ReactProvider>\n  );\n}\n\nexport default App;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport { useWeb3React } from \"@web3-react/core\";\nimport { useEffect, useState } from \"react\";\nimport { injectedConnector } from \"./injected-connector\";\n\nexport function useEagerConnect() {\n\n    \n  const { activate, active } = useWeb3React();\n\n  const [tried, setTried] = useState(false);\n\n  useEffect(() => {\n    injectedConnector.isAuthorized().then((isAuthorized) => {\n        \n      if (isAuthorized) {\n        activate(injectedConnector).catch((error) => {\n            console.log(\"error\", error);\n          setTried(true);\n        });\n      } else {\n        setTried(true);\n      }\n    });\n  }, []); \n  useEffect(() => {\n    if (!tried && active) {\n      setTried(true);\n    }\n  }, [tried, active]);\n\n  return tried;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}